### Data Preparation
knitr::opts_chunk$set(echo = TRUE)
# Setup R environment for DATA 606. See http://data606.net for more information.
# Install R packages
# install.packages(c('tidyverse', 'devtools', 'shiny', 'psych', 'reshape2',
#				   'openintro', 'OIdata', 'fivethirtyeight', 'knitr'))
# devtools::install_github('jbryer/DATA606')
# Create vector with all needed libraries
library(knitr)
library(DBI)        # MariaDB Connector
library(RMySQL)
library(tidyr)
library(dplyr)
library(stringr)
library(tidyverse)
library(DT)         # Library to create datatable
library(DATA606)
library(statsr)
### MySQL connection setup
# Read password and user name from remote location in order to establish connection to MySQL
# Connect to my-db as defined in /etc/my.cnf
# Remote definitions
readMariaDBTable <- function(myLocalHost = NULL, myLocalMySQLSchema = NULL, myLocalTableName = NULL){
url <- "https://github.com/dvillalobos/MSDS/tree/master/606/Projects/data/mysql.csv"
MySQLConnect <- read.csv(url, header = FALSE, sep = ",", stringsAsFactors=FALSE)
# Remote access definitions
myLocalPassword <- MySQLConnect$V1
myLocalUser <- MySQLConnect$V2
# Create a RMySQL Connection
mydbConnection <- dbConnect(RMySQL::MySQL(),
user = myLocalUser,
password = myLocalPassword,
host = myLocalHost,
dbname = myLocalMySQLSchema)
# Check to see if our table exists? and read our data
myLocalTableName <- tolower(myLocalTableName)
if (dbExistsTable(mydbConnection, name = myLocalTableName)  == TRUE){
my.data <- dbReadTable(mydbConnection, name = myLocalTableName)
}
# Closing connection with local MAriaDB Schema
dbDisconnect(mydbConnection)
# Return Data
return(my.data)
}
# Remote access definitions
# In order to avoid an Error Connection using 'localhost' use '127.0.0.1' instead.
myLocalHost <- '127.0.0.1' # or 'website.com' depending on where is the SQL server located.
myLocalMySQLSchema <- 'mylocalSQL'
myLocalTableName <- 'tbl_paysatxt'
my.data <- readMariaDBTable(myLocalHost = myLocalHost,
myLocalMySQLSchema = myLocalMySQLSchema,
myLocalTableName = myLocalTableName)
url <- "https://github.com/dvillalobos/MSDS/tree/master/606/Projects/data/mysql.csv"
MySQLConnect <- read.csv(url, header = FALSE, sep = ",", stringsAsFactors=FALSE)
# Remote access definitions
myLocalPassword <- MySQLConnect$V1
myLocalUser <- MySQLConnect$V2
myLocalPassword
MySQLConnect
### Data Preparation
knitr::opts_chunk$set(echo = TRUE)
# Setup R environment for DATA 606. See http://data606.net for more information.
# Install R packages
# install.packages(c('tidyverse', 'devtools', 'shiny', 'psych', 'reshape2',
#				   'openintro', 'OIdata', 'fivethirtyeight', 'knitr'))
# devtools::install_github('jbryer/DATA606')
# Create vector with all needed libraries
library(knitr)
library(DBI)        # MariaDB Connector
library(RMySQL)
library(tidyr)
library(dplyr)
library(stringr)
library(tidyverse)
library(DT)         # Library to create datatable
library(DATA606)
library(statsr)
### MySQL connection setup
# Read password and user name from remote location in order to establish connection to MySQL
# Connect to my-db as defined in /etc/my.cnf
# Remote definitions
readMariaDBTable <- function(myLocalHost = NULL, myLocalMySQLSchema = NULL, myLocalTableName = NULL){
url <- "https://raw.githubusercontent.com/dvillalobos/MSDS/master/606/Projects/data/mysql.csv"
MySQLConnect <- read.csv(url, header = FALSE, sep = ",", stringsAsFactors=FALSE)
# Remote access definitions
myLocalPassword <- MySQLConnect$V1
myLocalUser <- MySQLConnect$V2
# Create a RMySQL Connection
mydbConnection <- dbConnect(RMySQL::MySQL(),
user = myLocalUser,
password = myLocalPassword,
host = myLocalHost,
dbname = myLocalMySQLSchema)
# Check to see if our table exists? and read our data
myLocalTableName <- tolower(myLocalTableName)
if (dbExistsTable(mydbConnection, name = myLocalTableName)  == TRUE){
my.data <- dbReadTable(mydbConnection, name = myLocalTableName)
}
# Closing connection with local MAriaDB Schema
dbDisconnect(mydbConnection)
# Return Data
return(my.data)
}
# Remote access definitions
# In order to avoid an Error Connection using 'localhost' use '127.0.0.1' instead.
myLocalHost <- '127.0.0.1' # or 'website.com' depending on where is the SQL server located.
myLocalMySQLSchema <- 'mylocalSQL'
myLocalTableName <- 'tbl_paysatxt'
my.data <- readMariaDBTable(myLocalHost = myLocalHost,
myLocalMySQLSchema = myLocalMySQLSchema,
myLocalTableName = myLocalTableName)
colnames(my.data) <- c("Job_ID", "Position", "Base", "Annual", "Bonus", "Total", "Skills", "Location")
my.data
